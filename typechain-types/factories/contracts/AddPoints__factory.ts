/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { AddPoints, AddPointsInterface } from "../../contracts/AddPoints";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ExpAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "addExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816041565b506091565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102e7806100a06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632ce10fba14610067578063715018a61461007c57806372dfd178146100845780638da5cb5b146100b7578063cd50b4f5146100d2578063f2fde38b146100fb575b600080fd5b61007a61007536600461025a565b61010e565b005b61007a610186565b6100a461009236600461025a565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100ae565b6100a46100e036600461025a565b6001600160a01b031660009081526001602052604090205490565b61007a61010936600461025a565b61019a565b6101166101dd565b6001600160a01b0381166000908152600160205260408120805460c8929061013f90849061028a565b909155505060405160c881526001600160a01b038216907fe9dd8dc50748b98e5f52eab63e774f55a226d0140dd8876d63140358346bd7429060200160405180910390a250565b61018e6101dd565b610198600061020a565b565b6101a26101dd565b6001600160a01b0381166101d157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101da8161020a565b50565b6000546001600160a01b031633146101985760405163118cdaa760e01b81523360048201526024016101c8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561026c57600080fd5b81356001600160a01b038116811461028357600080fd5b9392505050565b808201808211156102ab57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122028d9ae7db84926722881d682fdcc1bcfed8e03b17a75ee2d8c832a1deb893e1f64736f6c634300081c0033";

type AddPointsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddPointsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddPoints__factory extends ContractFactory {
  constructor(...args: AddPointsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AddPoints & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddPoints__factory {
    return super.connect(runner) as AddPoints__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddPointsInterface {
    return new Interface(_abi) as AddPointsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AddPoints {
    return new Contract(address, _abi, runner) as unknown as AddPoints;
  }
}
